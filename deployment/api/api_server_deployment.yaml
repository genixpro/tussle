apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tussle-__TUSSLE_ENV__-api
  name: tussle-__TUSSLE_ENV__-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: tussle-__TUSSLE_ENV__-api
  strategy:
    rollingUpdate:
      maxSurge: __MAX_SURGE__
      maxUnavailable: __MAX_UNAVAILABLE__
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tussle-__TUSSLE_ENV__-api
    spec:
      containers:
        - name: main-api
          env:
            - name: TUSSLE_ENV
              value: __TUSSLE_ENV__
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcp/key.json
          image: us-central1-docker.pkg.dev/tussle/tussle-api/tussle-api:__REVISION_ID__
          command: ["bash", "-c", "tussle_server"]
          imagePullPolicy: IfNotPresent
          readinessProbe:
            failureThreshold: 1
            exec:
              command:
                - curl
                - http://localhost:5496/
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 5
            exec:
              command:
                - curl
                - http://localhost:5496/
            initialDelaySeconds: 210
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            limits:
              # Set the limit to 4 cpus, so we can allow bursts of activity, such as when
              # a file is uploaded. In the beginning, we allow significant burst load,
              # at least until we have enough traffic to justify dedicated CPU for each
              # server
              cpu: 4000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          # Mount a volume at /etc/gcp to containing the file key.json taken from the secret production-key
          volumeMounts:
              - mountPath: /etc/gcp
                name: gcp-key
                readOnly: true
      volumes:
        - name: gcp-key
          secret:
            secretName: production-key
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
